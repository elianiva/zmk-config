/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "mouse.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

&soft_off {
    hold-time-ms = <1000>; // Only turn off it the key is held for 1 seconds or longer.
};

/ {
        chosen {
                zmk,battery = &vbatt;
        };
        vbatt: vbatt {
                compatible = "zmk,battery-voltage-divider";
        };
        behaviors {
                lpi: left_require_prior_idle {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <200>;                        // <---[[produces tap if held longer than tapping-term-ms]]
                        quick-tap-ms = <175>;
                        require-prior-idle-ms = <60>;
                        bindings = <&kp>, <&kp>;
                };
                rpi: right_require_prior_idle {
                        compatible = "zmk,behavior-hold-tap";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <200>;                        // <---[[produces tap if held longer than tapping-term-ms]]
                        quick-tap-ms = <175>;
                        require-prior-idle-ms = <60>;
                        bindings = <&kp>, <&kp>;
                };
        };
        keymap {
                compatible = "zmk,keymap";

                qwerty_layer { // 0
                        bindings = <
   &kp Q  &kp W       &kp E        &kp R        &kp T &none     &none &kp Y &kp U        &kp I        &kp O       &kp P
   &kp A  &lpi LALT S &lpi LCTRL D &lpi LSHFT F &kp G &none     &none &kp H &rpi RSHFT J &rpi RCTRL K &rpi LALT L &rpi RGUI QUOT
   &kp Z  &kp X       &kp C        &kp V        &kp B &none     &none &kp N &kp M        &kp COMMA    &kp DOT     &kp FSLH
                                    &lt 4 TAB &lt 5 ENTER &none &lt 3 SPACE &lt 1 BACKSPACE
                        >;
                };

                number_layer { // 1
                        bindings = <
   &kp LBKT  &kp N7 &kp N8 &kp N9 &kp RBKT  &none       &none &soft_off &none     &none     &none    &lt 2 DELETE
   &kp SEMI  &kp N4 &kp N5 &kp N6 &kp EQUAL &none       &none &none     &kp RSHFT &kp RCTRL &kp LALT &kp RGUI
   &kp GRAVE &kp N1 &kp N2 &kp N3 &kp BSLH  &none       &none &none     &none     &none     &kp RALT &mo 7
                                 &kp N0 &kp MINUS &none &none &none
                        >;
                };

                function_layer { // 2
                        bindings = <
   &kp F12 &kp F7 &kp F8 &kp F9 &kp PSCRN &none       &none &none &none     &none     &none    &none
   &kp F11 &kp F4 &kp F5 &kp F6 &none     &none       &none &none &kp RSHFT &kp RCTRL &kp LALT &kp RGUI
   &kp F10 &kp F1 &kp F2 &kp F3 &none     &none       &none &none &none     &none     &kp RALT &none
                                &kp 0 &kp MINUS &none &none &none
                        >;
                };

                symbol_layer { // 3
                        bindings = <
   &kp LBRC  &kp AMPS &kp ASTRK   &kp LPAR  &kp RBRC &none       &none &none &none     &none     &none    &none
   &kp COLON &kp DLLR &kp PERCENT &kp CARET &kp PLUS &none       &none &none &kp RSHFT &kp RCTRL &kp LALT &kp RGUI
   &kp TILDE &kp EXCL &kp AT      &kp HASH  &kp PIPE &none       &none &none &none     &none     &kp RALT &none
                                         &kp LPAR &kp RPAR &none &none &none
                        >;
                };

                nav_layer { // 4
                        bindings = <
   &lt 6 ESC &none    &none     &none     &none &none       &none &none    &kp K_PASTE &kp K_COPY &kp K_CUT &caps_word
   &kp LGUI  &kp LALT &kp LCTRL &kp LSHFT &none &none       &none &kp LEFT &kp DOWN    &kp UP     &kp RIGHT &kp CAPS
   &none     &kp RALT &none     &none     &none &none       &none &kp HOME &kp PG_DN   &kp PG_UP  &kp END   &kp INS
                                          &none &none &none &kp SPACE &kp BSPC
                        >;
                };

                mouse_layer { // 5
                        bindings = <
   &none     &none    &none     &none     &none &none       &none &mkp MCLK      &kp K_PASTE    &kp K_COPY   &kp K_CUT       &none
   &kp LGUI  &kp LALT &kp LCTRL &kp LSHFT &none &none       &none &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &none
   &none     &kp RALT &none     &none     &none &none       &none &msc SCRL_LEFT &msc SCRL_DOWN &msc SCRL_UP &msc SCRL_RIGHT &none
                                          &none &none &none &mkp LCLK &mkp RCLK
                        >;
                };

                media_layer { // 6
                        bindings = <
   &none     &none    &none     &none     &none &none       &none &none       &kp C_MUTE   &none        &none      &none
   &kp LGUI  &kp LALT &kp LCTRL &kp LSHFT &none &none       &none &kp C_PREV  &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT &none
   &none     &kp RALT &none     &none     &none &none       &none &none       &kp C_BRI_DN &kp C_BRI_UP &none      &none
                                          &none &none &none &kp C_PP &kp C_STOP
                        >;
                };

                bluetooth_layer { // 7
                        bindings = <
   &none &bt BT_PRV   &bt BT_CLR   &bt BT_NXT     &out OUT_BLE &none       &none &out OUT_USB      &none         &none         &none         &none
   &none &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR_ALL &none        &none       &none &ext_power EP_OFF &bt BT_DISC 3 &bt BT_DISC 4 &none         &none
   &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2   &none        &none       &none &none             &bt BT_DISC 0 &bt BT_DISC 1 &bt BT_DISC 2 &none
                                                         &none &none &none &none &none
                        >;
                };

//                 adjust_layer {
//                         bindings = <
//    &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &none &rgb_ug RGB_TOG    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
//    &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR &none &none              &none        &none        &none        &none        &none        &none
//    &none           &none           &none           &none           &none &none              &sys_reset       &none        &none        &none        &none        &none
//                                                              &trans      &trans       &tog 3        &trans      &trans
//                         >;
//                 };
        };
};
